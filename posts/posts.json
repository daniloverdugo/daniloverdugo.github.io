[
  {
    "path": "posts/2022-02-07-intro-1/",
    "title": "R: Historia y Origen",
    "description": "R es un sistema o una plataforma que surge de un entorno computacional diseñado originalmente para el cálculo estadístico.",
    "author": [
      {
        "name": "Danilo Verdugo",
        "url": {}
      },
      {
        "name": "",
        "url": {}
      }
    ],
    "date": "2022-02-07",
    "categories": [
      "R",
      "INTRO"
    ],
    "contents": "\r\nNace como un dialecto de S, el cual es un lenguaje de programación desarrollado por John Chambers (Figura 1) y otros en la antigua “Bell Telephone Laboratorios,” originalmente miembro de AT & T Corp. S se inicia en 1976 como un programa interno de análisis estadístico.\r\n\r\n\r\n\r\nFigure 1: John Chambers creador de S.\r\n\r\n\r\n\r\nEn 1988 el sistema fue reescrito desde FORTRAN a C y empezó a parecerse al sistema que tenemos hoy en día (esto fue en la versión 3 del lenguaje S). Lo importante de destacar es el espíritu original por el cual fue diseñado el sistema: facilitar el análisis de datos, primero para ellos y eventualmente, para otros.\r\nJohn Chambers describe el anhelo al momento de diseñar el lenguaje S con que “los usuarios comenzaran en un entorno interactivo, donde no pensaran conscientemente en sí mismos como programadores. Entonces, cuando sus necesidades fuesen más claras y su sofisticación aumentara, deberían ser capaces de transitar gradualmente a la programación, cuando lenguaje y sistema serían más importantes.” La clave fue la transición de usuario a desarrollador. Ellos querían construir un lenguaje que fácilmente podría dar servicio a ambos tipos de usuario. Técnicamente, necesitaban construir un lenguaje que fuese adecuado para el análisis de datos interactivo (basada en línea de comandos), así como para la escritura de programas (como los lenguajes tradicionales de programación).\r\n\r\n\r\n\r\nFigure 2: Ross Ihaka y Robert Gentleman, los creadores de R.\r\n\r\n\r\n\r\nEn 1991, Ross Ihaka y Robert Gentleman (Figura 2) en el Departamento de Estadística de la Universidad de Auckland crean R. Inspirado en la filosofía de S pero como un proyecto totalmente abierto. En 1993, se hace público. La experiencia de Robert y Ross sobre el desarrollo de R está documentada en un interesante artículo de 1996 en el Journal of Computational and Graphical Statistics (Ihaka and Gentleman 1996).\r\nHoy R se ejecuta en casi cualquier sistema operativo o plataforma informática estándar ¡incluso en una playstation 3! Una característica interesante en muchos proyectos de código abierto son las versiones frecuentes. Estos días se produce una liberación anual importante, por lo general en octubre, donde se incorporan nuevas características principales y lanzadas al público. A lo largo del año, se realizarán lanzamientos de corrección de errores en pequeña escala, según sea necesario. Los lanzamientos frecuentes y ciclo de liberación regular indican un permanente y activo desarrollo del software donde se asegura que los errores serán tratados de una manera oportuna. Por supuesto, el árbol principal de código fuente de R se encuentra bajo el control de un pequeño grupo de desarrolladores. Al momento de escribir estas líneas (mayo 2021) nos encontramos en la versión 4.0.5 o Shake and Throw.\r\nEs interesante notar el dato anecdótico que los nombres propios con que se han designado desde la primera versión liberada Great Pumpkin (versión 2.14.0, noviembre 2011) o Trick or Treat (versión 2.15.2, octubre 2012) entre muchas otras hacen referencia a un capítulo específico de la serie animada Peanuts (Figura 3).\r\n\r\n\r\n\r\nFigure 3: Serie animada Peanuts (Snoopy) basada en los comics de Charles Schulz.\r\n\r\n\r\n\r\nOtra de las ventajas clave que R posee avanzadas capacidades gráficas con calidad de publicación cuya existencia se ha asegurado desde el principio del proyecto mediante el control muy fino en todos los aspectos de la composición gráfica.\r\nDiseño de la Plataforma R\r\nEl éxito alcanzado por el proyecto R no tiene nada que ver con las herramientas en sí mismas, sino más bien con lo activa que sea la comunidad de usuarios, hoy miles de ellos en todo el mundo se han unido para realizar contribuciones como también ayudar a otros a usar R para todo tipo de nuevas e insospechadas aplicaciones.\r\nEl sistema R base o core o núcleo de la plataforma se compone de las herramientas mínimas para su funcionamiento que se encuentra disponible para varios sistemas operativos: Linux, Windows, Mac e incluso su Código Fuente en la denominada Red Exhaustiva de Archivos R (Comprehensive R Archive Network, CRAN. cran.r-project.org, es una red de servidores ftp y web en todo el mundo que almacenan versiones idénticas y actualizadas de código y documentación para R)\r\nRStudio\r\nAunque R posee un diseño muy avanzado e inteligente a medida que se realizan rutinas para análisis de datos, gráficos, o se generan archivos temporales de esos mismos procesos o se descargan e instalan diversos paquetes de código adicionales se hace muy difícil de mantener y menos aún generar procedimientos claros, organizados y replicables en distintos entornos informáticos, siendo esta última capacidad crítica para la aproximación científica al análisis de datos. RStudio también es una herramienta libre que hace más fácil el trabajo con R, Loo and De Jonge (2012) definen sus principales características como:\r\nEditor de texto, explorador de archivos, visualizador de gráficos todo en el mismo entorno.\r\nTrabaja directo con una instalación subyacente de R.\r\nOrganiza el código y mantiene múltiples proyectos.\r\nMantiene mi investigación reproducible.\r\nMantiene los paquetes en la instalación de R.\r\nCrea y comparte reportes.\r\nComparte el código y colabora con otros usuarios.\r\nRStudio hoy es una aplicación y una fundación dedicada al soporte de sus productos de código abierto1 como al servicio comercial de capacitación y consultoría en temas estadísticos y R. Su fundador J.J. Allaire también inventa el lenguaje de programación web ColdFusion, Windows Live Writer (programa para escribir y publicar blog), FitNow y LoseIt ambas aplicaciones móviles para ejercicio y pérdida de peso entre otros proyectos tecnológicos.\r\nCaracterísticas Principales\r\nAlgunas propiedades que hacen de RStudio el editor ideal para trabajar con R (tomado de Loo and De Jonge (2012)):Integración con la consola R: Escribe comandos directamente en R dentro de RStudio.Ejecución de código: Ejecuta código directo desde el editor.Paréntesis inteligente: Cierre automático de paréntesis, ilumina selección, cierre de comillas automático. Termina de escribir la palabra previamente iluminada de un menú intellisense.Ayuda en línea: Acceso directo a la ayuda de lenguaje y sintaxis.Atajos de teclado: Tareas repetitivas son asociadas a combinación de teclas. Integra Ayuda, Permite navegar y buscar en las páginas de ayuda nativas de R.Explorador de objetos e Historia: Se puede inspeccionar cada objeto creado en la sesión actual de R y su explorador de historia permite recorrer los comandos utilizados desde el actual hasta el primero de la sesión.Navegar por el código: Saltar entre funciones, llamadas y reportes, visor de datos y visualización tipo grilla para explorar el contenido de los objetos en la sesión actual.Menús de Importar datos: Para los tipos más comunes de archivo, ofrece un sistema de menú que genera el código R necesario. Integración gráfica con zoom, paneo y capacidades de exportación.Gestión de proyectos: Facilita el manejo y control de varios proyectos. Control de versión e integra los sistemas de control git y svn.Generación de Documentos: Genera pdf, html y otros formatos de reporte usando RMarkdown, Sweave o knitr.Publicación: Publicar reportes y rutinas directo a la web de Rpubs.com.\r\nInstalación de Plataforma R y RStudio\r\nPrimero se debe descargar el paquete de instalación desde el sitio web www.r-project.org siguiendo el link CRAN y buscar en el listado de servidores espejo el más cercano a la ubicación del usuario. Luego, seleccionar la versión correspondiente al sistema operativo de la máquina a instalar. A continuación, prestar atención y ubicar el link install R for the first time en el apartado base.\r\nFinalmente, encontramos el link para la descarga del paquete instalador, siempre será le versión más reciente. Ejecutar el programa y seguir los pasos indicados por el asistente.2\r\nUna vez terminada la instalación de R procedemos a instalar el programa RStudio desde el sitio www.rstudio.com y buscar en la lista de productos RStudio Desktop. A continuación, seleccionar la versión Open Source Edition que es libre de pago. Finalmente seguir la secuencia de botones correspondiente hasta llegar al punto de descarga del paquete de instalación. Poner especial atención en seleccionar el que corresponda a su versión de sistema operativo. Ejecutar el programa y seguir los pasos indicados por el asistente.\r\nConsideraciones Preliminares\r\nEl entorno de trabajo de RStudio posee una configuración por defecto que presenta una distribución de funcionalidades orientada al uso como entorno interactivo de cálculo y proceso de datos mediante línea de comandos contenido en la ventana Console y una vista general de los objetos y variables creadas en la sesión actual en la ventana Environment (Figura 4).\r\n\r\n\r\n\r\nFigure 4: Configuración por defecto.\r\n\r\n\r\n\r\nEl tipo de trabajo descrito en el presente texto utiliza metodologías más complejas y extensas que trabajar solo como calculadora o proceso de datos. Por lo tanto, vamos a sugerir una nueva distribución de ventanas que optimicen el trabajo en un tipo de archivos que permiten ir escribiendo largas secuencias de comandos que van desarrollando las tareas de manera secuencial y por seguridad buscamos grabar en disco un archivo que la próxima vez me permita repetir dicha secuencia y continuar o modificar según el caso. Los archivos creados tendrán la extensión .R y los denominaremos scripts.\r\nUna mejor disposición de ventanas es la sugerida en la figura 5. Donde se privilegia el panel izquierdo para extender a altura completa el editor de texto y maximizar el área disponible para escribir y editar scripts y mantiene el panel derecho la consola con su línea de comando.\r\n\r\n\r\n\r\nFigure 5: Configuración sugerida.\r\n\r\n\r\n\r\nOtro aspecto importante es el uso de un color de fondo obscuro que reduce la fatiga visual cuando se sienta frente al monitor durante períodos muy prolongados.\r\nOtra característica configurada por defecto es que al momento de salir de una sesión, es guardar el espacio de trabajo lo que significa que se crea una imagen de las variables y funciones actuales en un archivo llamado ”.RData”.\r\nCuando se vuelve a abrir R desde el mismo directorio de trabajo, el espacio de trabajo se cargará y todas estas cosas estarán disponibles. Pero no recomendamos ese comportamiento. Cargar un espacio de trabajo guardado convierte el script cuidadosamente escrito donde todo sucede lógicamente de acuerdo con un plan a algo parecido a un cajón de sastre, lleno de páginas y cuadernos variados que pueden ser o no pertenecientes al trabajo actual.\r\nPara configurar nuestro programa recomendamos cambiar algunos parámetros en la configuración general de la aplicación, para ellos debemos ir a la opción de menú Tools/Global Options. (Figura 6).\r\n\r\n\r\n\r\nFigure 6: Opción de menú para configuración general.\r\n\r\n\r\n\r\nEl cuadro de dialogo resume un gran número de parámetros que abarcan detalles del funcionamiento general de RStudio (Figura 7).\r\n\r\n\r\n\r\nFigure 7: Panel de configuración general.\r\n\r\n\r\n\r\nLos siguientes cambios son necesarios para configurar los aspectos mencionados en punto anterior:\r\nGeneral: Para quitar la carga automática de variables y funciones de la última sesión, debemos en el grupo Workspace quitar el check de Restore .RData into… y seleccionar la opción Never de la lista Save workspce to .RData… (Figura 7).\r\nAppearance: La configuración de colores en el editor de texto y los otros cuadros se selecciona en la lista Editor theme: y se debe tener especial cuidado en elegir aquel con un fondo negro o muy obscuro (Figura 8).\r\nPane Layout: La distribución de los espacios disponibles para optimizar el editor de texto y mantener la línea de comando visible se configura siguiendo las opciones en indicadas en la figura 9).\r\n\r\n\r\n\r\nFigure 8: Selección para configuración de colores.\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 9: Configuración de paneles y cuadros.\r\n\r\n\r\n\r\nPaquetes\r\nEl sistema base, tal como se describe en , es capaz de ejecutar rutinas y código encapsulado en forma de módulos o paquetes (packages) que amplifican y diversifican las posibilidades de cómputo, gráfica, conexiones remotas, generación de documentos y un gran, gran etc.\r\n\r\nEl sistema base o core también se forma de un conjunto de paquetes.\r\n\r\nAdemás de las funciones más fundamentales el sistema base incluye los paquetes utils, stats, datasets, graphics, grDevices, grid, methods, tools, parallel, compiler, splines, tcltk, stats4 y algunos paquetes recomendados: boot, class, cluster, codetools, foreign, KernSmooth, lattice, mgcv, nlme, rpart, survival, MASS, spatial, nnet, Matrix.\r\nCuando se descarga una instalación nueva de R desde CRAN, se obtiene todos los paquetes mencionados, que representa un gran porcentaje de la funcionalidad del sistema.\r\nBúsqueda\r\nAdemás de la gran cantidad de paquetes instalados por defecto, existe una gran cantidad de paquetes opcionales disponibles.\r\nA noviembre 2021 existen 18.407 paquetes en CRAN que han sido desarrollados por los usuarios y programadores alrededor del mundo cada uno de ellos diseñado para un campo en especial.\r\nTambién hay muchos paquetes asociados con el proyecto Bioconductor3, (detalles en ).\r\nLas personas a menudo hacen sus propios paquetes y los hacen disponibles en sus sitios web personales; en realidad no hay manera confiable de realizar un seguimiento de cuántos paquetes están disponibles de este modo.\r\nHay una serie de paquetes que se desarrollan en los repositorios de GitHub y BitBucket pero no existe ninguna lista fiable de todos estos paquetes.\r\nEl mejor método para buscar en la web, nuevos paquetes es utilizar el sitio rseek.org (Figura 10) usando palabras claves y potenciado por el motor de búsqueda de Google.\r\n\r\n\r\n\r\nFigure 10: Sitio web de búsqueda de contenido asociado a R, modo ‘Package.’\r\n\r\n\r\n\r\nGeneralmente los resultados siempre serán múltiples y variados.\r\nInstalación\r\nUna vez identificado un paquete que ofrece las funcionalidades deseadas se debe instalar en nuestro ambiente R y dejarlo disponible para cuando se necesite. El entorno RStudio cuenta con un panel específico (Figura 11).\r\n\r\n\r\n\r\nFigure 11: Panel Packages.\r\n\r\n\r\n\r\nQue junto al listado de paquetes ya instalados se dispone de opciones para instalar Install y Update o actualizar los existentes.\r\nCuadro Diálogo\r\nEl botón Install levanta un cuadro de diálogo con las opciones de configuración (Figura 12) para instalar paquetes disponibles en CRAN o los paquetes descargados en formato .zip de sitios no oficiales.\r\n\r\n\r\n\r\nFigure 12: Opciones de Instalación vía RStudio.\r\n\r\n\r\n\r\nFunción install.packages()\r\nUn segundo método de instalación es utilizar la función R escrita directamente en la consola y reemplazando nombre por el paquete deseado.\r\n\r\n\r\n\r\nActualización\r\nEl botón Update del panel paquetes levanta el cuadro de diálogo diseñado para la selección de los paquetes a actualizar. La lista solo muestra aquellos disponibles de actualización (Figura 13).\r\n\r\n\r\n\r\nFigure 13: Opciones de Instalación vía RStudio.\r\n\r\n\r\n\r\nHasta acá la descripción inicial introductoria a la plataforma RStudio. Te invito a comentar y compartir en tus redes para ampliar el número de felices usuarios de R.\r\nUn saludo cordial, Danilo.\r\n\r\n\r\n\r\nIhaka, Ross, and Robert Gentleman. 1996. “R: A Language for Data Analysis and Graphics.” Journal of Computational and Graphical Statistics 5 (3): 299–314. https://doi.org/10.1080/10618600.1996.10474713.\r\n\r\n\r\nLoo, M. P. J. van der, and E. De Jonge. 2012. Learning RStudio for r Statistical Computing. Community Experience Distilled. Lightning Source. https://books.google.cl/books?id=vOTHmAEACAAJ.\r\n\r\n\r\nwww.rstudio.com↩︎\r\nEs importante señalar que el nombre de usuario de la sesión Windows donde se realizará la instalación no existan espacios e idealmente no contenga tildes. De ser así, es recomendable crear una nueva sesión con un nombre sin espacios ni tildes.↩︎\r\nwww.bioconductor.org↩︎\r\n",
    "preview": "posts/2022-02-07-intro-1/img/creators.jpg",
    "last_modified": "2022-02-08T11:51:26-03:00",
    "input_file": "intro-1.knit.md"
  }
]
