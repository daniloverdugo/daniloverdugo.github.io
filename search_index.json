[["mat.html", "Capítulo 5 Matrices 5.1 Operaciones Numéricas 5.2 Indexado y Subconjunto 5.3 Edición de Contenido 5.4 Opciones Avanzadas", " Capítulo 5 Matrices Un vector posee un índice por lo tanto es unidimensional, si agregamos una segunda dimensión se convierte en bidimensional y se denomina matriz. La función en R para construir una matriz es matrix() y requiere dos parámetros de dimensión, además de los datos. La primera dimensión corresponde al número de filas y la segunda dimensión corresponde al número de columnas. matrix(1:8, 2, 4) ## [,1] [,2] [,3] [,4] ## [1,] 1 3 5 7 ## [2,] 2 4 6 8 Aunque se recomienda utilizar los parámetros con nombre por facilidad de uso: matrix(nrow = 5, ncol = 3) ## [,1] [,2] [,3] ## [1,] NA NA NA ## [2,] NA NA NA ## [3,] NA NA NA ## [4,] NA NA NA ## [5,] NA NA NA matrix(1:15, ncol = 3, nrow = 5) ## [,1] [,2] [,3] ## [1,] 1 6 11 ## [2,] 2 7 12 ## [3,] 3 8 13 ## [4,] 4 9 14 ## [5,] 5 10 15 Si necesita convertir un vector x evitando duplicar el objeto a una matriz puede intentarlo así: dim(x) &lt;- c(num_filas, num_columnas) Donde dim es una función que redefine las dimensiones de la matriz. El parámetro byrow cambia la forma de asignar los datos de columna en columna a fila por fila: matrix(1:15, ncol = 3, nrow = 5, byrow = T) ## [,1] [,2] [,3] ## [1,] 1 2 3 ## [2,] 4 5 6 ## [3,] 7 8 9 ## [4,] 10 11 12 ## [5,] 13 14 15 5.1 Operaciones Numéricas Las matrices responden a las mismas reglas de operación que los vectores realizando las operaciones elemento a elemento: (mi_matriz &lt;- matrix(1:6,nrow=2, ncol=3)) ## [,1] [,2] [,3] ## [1,] 1 3 5 ## [2,] 2 4 6 mi_matriz * 2 ## [,1] [,2] [,3] ## [1,] 2 6 10 ## [2,] 4 8 12 mi_matriz + 2 / mi_matriz ** 3 ## [,1] [,2] [,3] ## [1,] 3.00 3.074074 5.016000 ## [2,] 2.25 4.031250 6.009259 Y así podemos aplicar las funciones detalladas en : length(mi_matriz) #largo del vector ## [1] 6 min(mi_matriz) #encuetra valor mínimo ## [1] 1 max(mi_matriz) #encuentra valor máximo ## [1] 6 range(mi_matriz) #encuentra el rango ## [1] 1 6 mean(mi_matriz) #promedio ## [1] 3.5 median(mi_matriz) #mdiana ## [1] 3.5 sum(mi_matriz) #sumatoria ## [1] 21 prod(mi_matriz) #producto de todos elementos ## [1] 720 var(mi_matriz) #varianza ## [,1] [,2] [,3] ## [1,] 0.5 0.5 0.5 ## [2,] 0.5 0.5 0.5 ## [3,] 0.5 0.5 0.5 sd(mi_matriz) #desviación estándar ## [1] 1.870829 Y existe una serie de funciones especialmente diseñadas para matrices. dim(mi_matriz) #Dimensión de la matriz, fila x columna ## [1] 2 3 nrow(mi_matriz) #Número de filas ## [1] 2 ncol(mi_matriz) #Número de columnas ## [1] 3 rowSums(mi_matriz, na.rm = T) #Suma elementos por filas ## [1] 9 12 colSums(mi_matriz, na.rm = T) #Suma elementos por columnas ## [1] 3 7 11 rowMeans(mi_matriz) #Promedio por filas ## [1] 3 4 colMeans(mi_matriz) #Promedio por columnas ## [1] 1.5 3.5 5.5 5.2 Indexado y Subconjunto Las mismas reglas aplicadas a los vectores son aplicables a las matrices, considerando sí que el índice i en x[i, ] será la i-ésima fila, el índice j en x[ , j] será la j-ésima columna y x[i, j] refiere al ij-ésimo elemento de x. Los índices i y j deben ser vectores numéricos. (mi_matriz &lt;- matrix(1:6, 3, 2, byrow = T)) ## [,1] [,2] ## [1,] 1 2 ## [2,] 3 4 ## [3,] 5 6 mi_matriz[2, 1] ## [1] 3 mi_matriz[c(1, 3), 2] ## [1] 2 6 mi_matriz[1, ] ## [1] 1 2 mi_matriz[2:3, ] ## [,1] [,2] ## [1,] 3 4 ## [2,] 5 6 mi_matriz[, 1] ## [1] 1 3 5 mi_matriz[, 1:2] ## [,1] [,2] ## [1,] 1 2 ## [2,] 3 4 ## [3,] 5 6 5.3 Edición de Contenido Modificar valores se hace aplicando las mismas técnicas del punto anterior, se selecciona un subconjunto y se asignan los valores: mi_matriz[3, 2] &lt;- 45.66 #modificar un valor mi_matriz[, 1] &lt;- 333 #modificar toda la columna mi_matriz[c(1, 2), ] &lt;- 777 #modificar todas las filas mi_matriz ## [,1] [,2] ## [1,] 777 777.00 ## [2,] 777 777.00 ## [3,] 333 45.66 5.4 Opciones Avanzadas 5.4.1 Nombres de Filas y Columnas Para facilidad de uso también contamos con un método para asignar nombres a filas y columnas y usar esos nombres como índices: rownames(mi_matriz) &lt;- LETTERS[1:3] colnames(mi_matriz) &lt;- c(&quot;uno&quot;, &quot;dos&quot;) mi_matriz ## uno dos ## A 777 777.00 ## B 777 777.00 ## C 333 45.66 mi_matriz[,&#39;uno&#39;] ## A B C ## 777 777 333 mi_matriz[&#39;B&#39;,&#39;uno&#39;] ## [1] 777 También podemos usar las mismas funciones y un índice para cambiar su nombre: rownames(mi_matriz)[3] &lt;- &quot;Letra C&quot; mi_matriz ## uno dos ## A 777 777.00 ## B 777 777.00 ## Letra C 333 45.66 5.4.2 Modificar Tamaño de Matrices Agregar información (cambiando el tamaño de la matriz) se realiza mediante las funciones cbind() y rbind(), la primera agrega a continuación un nueva columna de datos y la segunda filas: datos_columna &lt;- c(100, 200,300) mi_matriz &lt;- cbind(mi_matriz, nombre_col= datos_columna) datos_fila &lt;- c(1000, 2000, 3000) (mi_matriz &lt;- rbind(mi_matriz, nombre_fil= datos_fila)) ## uno dos nombre_col ## A 777 777.00 100 ## B 777 777.00 200 ## Letra C 333 45.66 300 ## nombre_fil 1000 2000.00 3000 5.4.3 Información Adicional Por último, también contamos con la función comment() para asociar información adicional al objeto. comment(mi_matriz) &lt;- &quot;Información Adicional&quot; attributes(mi_matriz) ## $dim ## [1] 4 3 ## ## $dimnames ## $dimnames[[1]] ## [1] &quot;A&quot; &quot;B&quot; &quot;Letra C&quot; &quot;nombre_fil&quot; ## ## $dimnames[[2]] ## [1] &quot;uno&quot; &quot;dos&quot; &quot;nombre_col&quot; ## ## ## $comment ## [1] &quot;Información Adicional&quot; "]]
